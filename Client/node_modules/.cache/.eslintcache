[{"/Users/artur/Desktop/VI semestr/Cloud/project/Client/src/index.js":"1","/Users/artur/Desktop/VI semestr/Cloud/project/Client/src/App.js":"2","/Users/artur/Desktop/VI semestr/Cloud/project/Client/src/components/Table/Table.jsx":"3","/Users/artur/Desktop/VI semestr/Cloud/project/Client/src/components/Seats/Seats.jsx":"4"},{"size":291,"mtime":1686921436201,"results":"5","hashOfConfig":"6"},{"size":397,"mtime":1686921436200,"results":"7","hashOfConfig":"6"},{"size":3121,"mtime":1686921436200,"results":"8","hashOfConfig":"6"},{"size":3340,"mtime":1686921436200,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1txlx4l",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/artur/Desktop/VI semestr/Cloud/project/Client/src/index.js",[],[],"/Users/artur/Desktop/VI semestr/Cloud/project/Client/src/App.js",["24","25"],[],"import { Route, Routes, Navigate } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport Table from \"./components/Table/Table\";\nimport Seats from \"./components/Seats/Seats\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" exact element={<Table />} />\n      <Route path=\"/seats\" exact element={<Seats />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","/Users/artur/Desktop/VI semestr/Cloud/project/Client/src/components/Table/Table.jsx",["26","27","28"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Link } from \"react-router-dom\"\nimport \"./styles.Table.css\";\n\nconst Table = () => {\n  const [object, setObject] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const headers = [\n    \"Operating airline\",\n    \"Iata Code\",\n    \"Aircraft model\",\n    \"Flight number\",\n    \"Departure airport\",\n    \"Arrival airport\",\n    \"Departure terminal\",\n  ];\n  const headersCompare = [\n    \"operatingAirline\",\n    \"iataCode\",\n    \"aircraftModelNameComboBox\",\n    \"flightNumber\",\n    \"departureAirport\",\n    \"arrivalAirport\",\n    \"departureTerminal\",\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/flights\");\n        setObject(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <h1>Loading data...</h1>;\n  }\n\n  const renderObjectFields = () => {\n    let hasNestedObject = false;\n    const rows = [];\n    let done = true;\n    const renderFields = () => {\n      for (const key of headers) {\n        rows.push(<th key={key}>{key}</th>);\n        hasNestedObject = true;\n        done = false;\n      }\n    };\n\n    renderFields();\n    if (hasNestedObject) {\n      rows.push(\n        <React.Fragment key=\"buttons\">\n          <th>Reserve</th>\n        </React.Fragment>\n      );\n      hasNestedObject = false;\n    }\n\n    return rows;\n  };\n  const reservation = (obj) => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/flights/\" + obj);\n        console.log(response.data.flight_seats[0]);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n\n  }\n\n\n  const renderObjectValue = (obj) => {\n    let hasNestedObject = false;\n    const rows = [];\n\n    const renderFields = (obj) => {\n      const fields = []; // Separate array for fields within a single object\n\n      for (const [key, value] of Object.entries(obj)) {\n        if (typeof value === \"object\" && !Array.isArray(value)) {\n          renderFields(value); // Directly call renderFields for nested objects\n        } else if (headersCompare.includes(key)) {\n          fields.push(<td key={key}>{value}</td>);\n          hasNestedObject = true;\n        }\n      }\n\n      if (fields.length > 0) {\n        rows.push(\n          <tr key={Math.random()}>\n            {fields}\n            <td className=\"noPadding\">\n              <Link to=\"/seats\">\n                <button type=\"button\"\n                  className=\"noPadding editButton\" onClick={() => localStorage.setItem(\"id\", obj.id)}>\n                  Reserve\n                </button>\n              </Link>\n            </td>\n          </tr>\n        );\n      }\n    };\n\n    renderFields(obj);\n\n    return rows;\n  };\n\n  return (\n    <table className=\"tableHeaders\">\n      <thead>\n        <tr>{renderObjectFields()}</tr>\n      </thead>\n      <tbody>{renderObjectValue(object)}</tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","/Users/artur/Desktop/VI semestr/Cloud/project/Client/src/components/Seats/Seats.jsx",[],[],{"ruleId":"29","severity":1,"message":"30","line":1,"column":25,"nodeType":"31","messageId":"32","endLine":1,"endColumn":33},{"ruleId":"29","severity":1,"message":"33","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":16},{"ruleId":"29","severity":1,"message":"34","line":50,"column":9,"nodeType":"31","messageId":"32","endLine":50,"endColumn":13},{"ruleId":"29","severity":1,"message":"35","line":71,"column":9,"nodeType":"31","messageId":"32","endLine":71,"endColumn":20},{"ruleId":"29","severity":1,"message":"36","line":87,"column":9,"nodeType":"31","messageId":"32","endLine":87,"endColumn":24},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'done' is assigned a value but never used.","'reservation' is assigned a value but never used.","'hasNestedObject' is assigned a value but never used."]